{"ast":null,"code":"import Header from'./Header.js';import Clock from'./Clock.js';import Pomobtn from'./Pomobtn.js';import Timer from'./Timer.js';import Start from'./Start.js';import Description from'./Description.js';import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//CODE FOR INPUTS/SETTINGS--------------------------------------------------\n//gets values based on local storage or defaults\nconst[pomoInput,setPomoInput]=useState(localStorage.getItem('pomoInput')||25);const[longInput,setLongInput]=useState(localStorage.getItem('longInput')||15);const[shortInput,setShortInput]=useState(localStorage.getItem('shortInput')||5);const[color,setColor]=useState(localStorage.getItem('color')||'#666EE6');const[backgroundPicture,setBackgroundPicture]=useState(localStorage.getItem('backgroundPicture')||null);//waits on new inputted values to set local storage\nuseEffect(()=>{localStorage.setItem('pomoInput',pomoInput);localStorage.setItem('longInput',longInput);localStorage.setItem('shortInput',shortInput);localStorage.setItem('color',color);localStorage.setItem('backgroundPicture',backgroundPicture);},[pomoInput,longInput,shortInput,color,backgroundPicture]);useEffect(()=>{const savedBackground=localStorage.getItem('backgroundPicture');if(savedBackground){document.querySelector('body').style.backgroundImage=\"url(\".concat(savedBackground,\")\");console.log('set saved background image');}else{document.querySelector('body').style.backgroundImage=\"none\";}},[backgroundPicture]);//CODE FOR TIMER------------------------------------------------------------\nconst[selectedTime,setSelectedTime]=useState({pomoInput},':00');const initialMinutes=pomoInput;const initialSeconds=initialMinutes*60;const[time,setTime]=useState(initialSeconds);//turns on and off timer\nconst[isRunning,setIsRunning]=useState(false);//to make sure timer only starts when start button clicked\nconst[startTimer,setStartTimer]=useState(false);useEffect(()=>{let timer;//startTimer condition\nif(startTimer&&time>0){//sets isRunning to true\nsetIsRunning(true);timer=setInterval(()=>{// arrow function expression, returns the result of the expression on the right side\nsetTime(prevTime=>prevTime-1);},1000);}else if(time===0){setIsRunning(false);clearInterval(timer);}return()=>clearInterval(timer);},[startTimer,time]);//waits for time value and for startTime to be true\nconst handleStart=()=>{setStartTimer(true);};const handlePause=()=>{setStartTimer(false);};const handleReset=()=>{setIsRunning(false);setTime(initialSeconds);setStartTimer(false);};const handleButtonClick=clickedTime=>{const[minutes,seconds]=clickedTime.split(':').map(Number);const totalSeconds=minutes*60+seconds;setTime(totalSeconds);//stop timer when button is changed, ie pomo to short break\nsetStartTimer(false);};const formatTime=timeInSeconds=>{//converts to minutes\nconst minutes=Math.floor(timeInSeconds/60).toString();//takes left over secONDS\nconst seconds=(timeInSeconds%60).toString().padStart(2,'0');// Check if minutes is more than 0 to avoid padding with '0'\nconst formattedMinutes=minutes>0?minutes:'0';return\"\".concat(formattedMinutes,\":\").concat(seconds);};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"contentWrap\",children:[/*#__PURE__*/_jsx(Header,{pomoInput:pomoInput,setPomoInput:setPomoInput,longInput:longInput,setLongInput:setLongInput,shortInput:shortInput,setShortInput:setShortInput,color:color,setColor:setColor,backgroundPicture:backgroundPicture,setBackgroundPicture:setBackgroundPicture}),/*#__PURE__*/_jsxs(\"div\",{className:\"contentContainer\",children:[/*#__PURE__*/_jsx(Clock,{}),/*#__PURE__*/_jsx(Pomobtn/*creates props to be passed in with onClick function*/,{pomoTime:\"\".concat(pomoInput,\":00\"),longTime:\"\".concat(longInput,\":00\"),shortTime:\"\".concat(shortInput,\":00\"),onClick:handleButtonClick}),/*#__PURE__*/_jsx(Timer,{time:formatTime(time)}),/*#__PURE__*/_jsx(Start,{onStart:handleStart,onPause:handlePause,onReset:handleReset})]})]})});}export default App;","map":{"version":3,"names":["Header","Clock","Pomobtn","Timer","Start","Description","React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","App","pomoInput","setPomoInput","localStorage","getItem","longInput","setLongInput","shortInput","setShortInput","color","setColor","backgroundPicture","setBackgroundPicture","setItem","savedBackground","document","querySelector","style","backgroundImage","concat","console","log","selectedTime","setSelectedTime","initialMinutes","initialSeconds","time","setTime","isRunning","setIsRunning","startTimer","setStartTimer","timer","setInterval","prevTime","clearInterval","handleStart","handlePause","handleReset","handleButtonClick","clickedTime","minutes","seconds","split","map","Number","totalSeconds","formatTime","timeInSeconds","Math","floor","toString","padStart","formattedMinutes","className","children","pomoTime","longTime","shortTime","onClick","onStart","onPause","onReset"],"sources":["/Users/gabe/vsProjects/pomobud/src/App.js"],"sourcesContent":["import Header from './Header.js';\nimport Clock from './Clock.js';\nimport Pomobtn from './Pomobtn.js';\nimport Timer from './Timer.js';\nimport Start from './Start.js';\nimport Description from './Description.js';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  //CODE FOR INPUTS/SETTINGS--------------------------------------------------\n  //gets values based on local storage or defaults\n  const [pomoInput, setPomoInput] = useState(\n    localStorage.getItem('pomoInput') || 25\n  );\n  const [longInput, setLongInput] = useState(\n    localStorage.getItem('longInput') || 15\n  );\n  const [shortInput, setShortInput] = useState(\n    localStorage.getItem('shortInput') || 5\n  );\n  const [color, setColor] = useState(\n    localStorage.getItem('color') || '#666EE6'\n  );\n  const [backgroundPicture, setBackgroundPicture] = useState(\n    localStorage.getItem('backgroundPicture') || null\n  );\n\n  //waits on new inputted values to set local storage\n  useEffect(() => {\n    localStorage.setItem('pomoInput', pomoInput);\n    localStorage.setItem('longInput', longInput);\n    localStorage.setItem('shortInput', shortInput);\n    localStorage.setItem('color', color);\n    localStorage.setItem('backgroundPicture', backgroundPicture);\n  }, [pomoInput, longInput, shortInput, color, backgroundPicture]);\n\n  useEffect(() => {\n    const savedBackground = localStorage.getItem('backgroundPicture');\n    if (savedBackground) {\n      document.querySelector(\n        'body'\n      ).style.backgroundImage = `url(${savedBackground})`;\n      console.log('set saved background image');\n    } else {\n      document.querySelector('body').style.backgroundImage = `none`;\n    }\n  }, [backgroundPicture]);\n\n  //CODE FOR TIMER------------------------------------------------------------\n  const [selectedTime, setSelectedTime] = useState({ pomoInput }, ':00');\n\n  const initialMinutes = pomoInput;\n  const initialSeconds = initialMinutes * 60;\n  const [time, setTime] = useState(initialSeconds);\n\n  //turns on and off timer\n  const [isRunning, setIsRunning] = useState(false);\n\n  //to make sure timer only starts when start button clicked\n  const [startTimer, setStartTimer] = useState(false);\n\n  useEffect(() => {\n    let timer;\n    //startTimer condition\n    if (startTimer && time > 0) {\n      //sets isRunning to true\n      setIsRunning(true);\n      timer = setInterval(() => {\n        // arrow function expression, returns the result of the expression on the right side\n        setTime((prevTime) => prevTime - 1);\n      }, 1000);\n    } else if (time === 0) {\n      setIsRunning(false);\n      clearInterval(timer);\n    }\n    return () => clearInterval(timer);\n  }, [startTimer, time]);\n  //waits for time value and for startTime to be true\n\n  const handleStart = () => {\n    setStartTimer(true);\n  };\n\n  const handlePause = () => {\n    setStartTimer(false);\n  };\n\n  const handleReset = () => {\n    setIsRunning(false);\n    setTime(initialSeconds);\n    setStartTimer(false);\n  };\n\n  const handleButtonClick = (clickedTime) => {\n    const [minutes, seconds] = clickedTime.split(':').map(Number);\n    const totalSeconds = minutes * 60 + seconds;\n    setTime(totalSeconds);\n    //stop timer when button is changed, ie pomo to short break\n    setStartTimer(false);\n  };\n\n  const formatTime = (timeInSeconds) => {\n    //converts to minutes\n    const minutes = Math.floor(timeInSeconds / 60).toString();\n    //takes left over secONDS\n    const seconds = (timeInSeconds % 60).toString().padStart(2, '0');\n    // Check if minutes is more than 0 to avoid padding with '0'\n    const formattedMinutes = minutes > 0 ? minutes : '0';\n\n    return `${formattedMinutes}:${seconds}`;\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"contentWrap\">\n        <Header\n          pomoInput={pomoInput}\n          setPomoInput={setPomoInput}\n          longInput={longInput}\n          setLongInput={setLongInput}\n          shortInput={shortInput}\n          setShortInput={setShortInput}\n          color={color}\n          setColor={setColor}\n          backgroundPicture={backgroundPicture}\n          setBackgroundPicture={setBackgroundPicture}\n        />\n\n        <div className=\"contentContainer\">\n          <Clock />\n\n          <Pomobtn\n            /*creates props to be passed in with onClick function*/\n            pomoTime={`${pomoInput}:00`}\n            longTime={`${longInput}:00`}\n            shortTime={`${shortInput}:00`}\n            onClick={handleButtonClick}\n          />\n\n          <Timer time={formatTime(time)} />\n\n          <Start\n            onStart={handleStart}\n            onPause={handlePause}\n            onReset={handleReset}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}