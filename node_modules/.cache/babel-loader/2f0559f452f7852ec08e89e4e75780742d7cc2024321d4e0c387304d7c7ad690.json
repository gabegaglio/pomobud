{"ast":null,"code":"var _jsxFileName = \"/Users/gabe/vsProjects/pomobud/src/Clock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Clock = () => {\n  _s();\n  const [time, setTime] = useState('');\n  const updateClock = () => {\n    const now = new Date();\n    let hours = now.getHours().toString().padStart(2, 0);\n    const merid = hours === 12 ? 'pm' : hours < 12 ? 'am' : 'pm';\n    hours = hours % 12 || 12;\n    hours = hours.toString();\n    const minutes = now.getMinutes().toString().padStart(2, 0);\n    const time = `${hours}:${minutes} ${merid}`;\n    setTime(time);\n  };\n\n  //updateClock runs every second\n  useEffect(() => {\n    updateClock();\n    const interval = setInterval(updateClock, 1000);\n    return () => clearInterval(interval);\n  }, []); //[] is dependency array, only runs once on render of DOM\n  //value can be put in there so on change of it, it runs again\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clockContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"clock\",\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Clock, \"PsMgnLgzzQiamQWS0F3M3yb0/nk=\");\n_c = Clock;\nexport default Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Clock","_s","time","setTime","updateClock","now","Date","hours","getHours","toString","padStart","merid","minutes","getMinutes","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gabe/vsProjects/pomobud/src/Clock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Clock = () => {\n  const [time, setTime] = useState('');\n  const updateClock = () => {\n    const now = new Date();\n    let hours = now.getHours().toString().padStart(2, 0);\n    const merid = hours === 12 ? 'pm' : hours < 12 ? 'am' : 'pm';\n    hours = hours % 12 || 12;\n    hours = hours.toString();\n    const minutes = now.getMinutes().toString().padStart(2, 0);\n    const time = `${hours}:${minutes} ${merid}`;\n    setTime(time);\n  };\n\n  //updateClock runs every second\n  useEffect(() => {\n    updateClock();\n    const interval = setInterval(updateClock, 1000);\n    return () => clearInterval(interval);\n  }, []); //[] is dependency array, only runs once on render of DOM\n  //value can be put in there so on change of it, it runs again\n\n  return (\n    <div className=\"clockContainer\">\n      <header className=\"clock\">{time}</header>\n    </div>\n  );\n};\n\nexport default Clock;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,IAAIC,KAAK,GAAGF,GAAG,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACpD,MAAMC,KAAK,GAAGJ,KAAK,KAAK,EAAE,GAAG,IAAI,GAAGA,KAAK,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;IAC5DA,KAAK,GAAGA,KAAK,GAAG,EAAE,IAAI,EAAE;IACxBA,KAAK,GAAGA,KAAK,CAACE,QAAQ,CAAC,CAAC;IACxB,MAAMG,OAAO,GAAGP,GAAG,CAACQ,UAAU,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC1D,MAAMR,IAAI,GAAG,GAAGK,KAAK,IAAIK,OAAO,IAAID,KAAK,EAAE;IAC3CR,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;;EAED;EACAL,SAAS,CAAC,MAAM;IACdO,WAAW,CAAC,CAAC;IACb,MAAMU,QAAQ,GAAGC,WAAW,CAACX,WAAW,EAAE,IAAI,CAAC;IAC/C,OAAO,MAAMY,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACR;;EAEA,oBACEf,OAAA;IAAKkB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BnB,OAAA;MAAQkB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEhB;IAAI;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV,CAAC;AAACrB,EAAA,CA1BID,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AA4BX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}